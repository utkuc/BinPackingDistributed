from ortools.linear_solver import pywraplp


def create_data_model():
    """Create the data for the example."""
    data = {}
    weights = [6, 13, 7, 15, 8, 38, 35, 13, 29, 29, 17, 30, 20, 15, 3, 13, 43, 24, 12, 14, 12, 16, 2, 4, 40, 12, 4, 46, 7, 12, 20, 31, 12, 7, 23, 24, 21, 36, 49, 9, 37, 27, 28, 8, 14, 49, 9, 30, 20, 26, 29, 34, 23, 49, 15, 13, 38, 39, 2, 16, 41, 47, 48, 15, 38, 22, 39, 4, 29, 33, 5, 7, 18, 39, 25, 9, 43, 46, 41, 40, 40, 12, 27, 4, 20, 46, 3, 49, 34, 49, 30, 28, 37, 11, 48, 17, 5, 19, 6, 41, 40, 39, 43, 22, 11, 14, 13, 39, 25, 3, 46, 19, 24, 13, 42, 9, 35, 26, 6, 38, 28, 43, 25, 23, 16, 18, 24, 38, 8, 44, 39, 32, 37, 43, 33, 31, 30, 5, 41, 26, 48, 3, 43, 10, 2, 18, 38, 37, 35, 34, 29, 25, 29, 5, 19, 19, 5, 21, 15, 19, 42, 29, 29, 21, 25, 16, 24, 47, 26, 14, 21, 32, 40, 7, 23, 27, 21, 10, 22, 15, 2, 4, 16, 6, 5, 49, 46, 22, 22, 46, 36, 8, 6, 35, 37, 13, 4, 9, 19, 32, 9, 14, 30, 2, 32, 38, 48, 5, 17, 47, 10, 38, 48, 18, 8, 4, 46, 2, 7, 35, 2, 11, 39, 15, 30, 27, 35, 35, 39, 27, 46, 14, 15, 40, 35, 12, 38, 34, 2, 25, 45, 33, 12, 23, 45, 45, 20, 46, 9, 49, 20, 10, 38, 19, 45, 27, 30, 15, 9, 26, 22, 44, 49, 5, 40, 25, 6, 4, 17, 38, 23, 42, 25, 20, 3, 10, 22, 36, 17, 18, 41, 13, 42, 32, 1, 46, 28, 11, 35, 14, 4, 15, 46, 38, 8, 21, 43, 38, 22, 37, 48, 30, 7, 4, 25, 44, 42, 14, 40, 1, 8, 39, 39, 2, 31, 12, 24, 15, 7, 32, 13, 24, 34, 47, 46, 43, 34, 3, 17, 27, 17, 13, 17, 22, 39, 46, 48, 34, 34, 25, 28, 12, 34, 45, 49, 28, 48, 35, 34, 20, 13, 47, 36, 28, 42, 18, 30, 26, 10, 9, 35, 32, 42, 6, 30, 4, 37, 13, 3, 20, 17, 40, 42, 47, 27, 46, 2, 8, 28, 38, 20, 17, 9, 36, 18, 33, 38, 10, 19, 18, 12, 38, 4, 13, 22, 22, 16, 3, 34, 36, 11, 15, 8, 38, 15, 48, 21, 33, 12, 35, 17, 17, 6, 28, 6, 25, 11, 7, 48, 3, 49, 33, 34, 12, 13, 30, 42, 24, 10, 33, 26, 35, 30, 25, 13, 8, 40, 5, 3, 24, 21, 42, 31, 15, 8, 26, 6, 43, 36, 29, 19, 6, 15, 10, 12, 6, 15, 4, 34, 9, 28, 19, 22, 10, 46, 23, 5, 7, 32, 25, 15, 7, 3, 18, 49, 47, 4, 10, 8, 7, 15, 44, 48, 49, 26, 43, 26, 5, 21, 44, 7, 19, 23, 3, 9, 33, 27, 6, 43, 27, 6, 30, 46, 25, 28, 40, 34, 1, 7, 41, 48, 33, 16, 48, 6, 36, 44, 33, 38, 11, 29, 44, 12, 45, 39, 36, 11, 10, 37, 41, 9, 22, 11, 23, 34, 28, 10, 2, 17, 13, 48, 34, 42, 44, 23, 43, 30, 43, 33, 8, 36, 38, 42, 13, 1, 17, 42, 13, 16, 16, 45, 33, 23, 8, 49, 4, 48, 9, 32, 23, 28, 38, 5, 37, 18, 15, 37, 32, 1, 20, 24, 43, 4, 1, 8, 21, 47, 23, 38, 4, 38, 29, 5, 45, 4, 21, 13, 39, 27, 26, 26, 14, 40, 47, 3, 11, 43, 41, 8, 34, 4, 12, 6, 20, 20, 19, 33, 47, 36, 24, 8, 40, 22, 14, 18, 40, 32, 28, 4, 6, 2, 37, 17, 28, 21, 17, 45, 4, 11, 39, 19, 1, 3, 21, 48, 19, 3, 11, 1, 49, 19, 5, 43, 31, 3, 43, 10, 34, 16, 26, 8, 7, 34, 42, 3, 22, 48, 18, 2, 18, 38, 45, 40, 46, 22, 19, 20, 38, 45, 44, 34, 7, 5, 31, 15, 45, 46, 44, 3, 6, 24, 1, 38, 16, 9, 18, 37, 23, 39, 1, 5, 12, 17, 23, 37, 5, 43, 11, 32, 6, 22, 31, 34, 42, 31, 23, 48, 45, 31, 25, 3, 20, 27, 6, 24, 30, 41, 8, 29, 34, 37, 37, 24, 49, 21, 26, 15, 8, 34, 17, 49, 46, 33, 29, 15, 17, 35, 49, 13, 31, 41, 35, 12, 30, 7, 36, 35, 33, 38, 20, 13, 41, 4, 12, 5, 19, 41, 22, 28, 4, 41, 4, 17, 29, 40, 17, 32, 3, 21, 18, 38, 9, 7, 3, 45, 18, 16, 3, 36, 36, 29, 22, 28, 22, 28, 14, 29, 14, 8, 36, 47, 14, 36, 44, 30, 30, 20, 10, 5, 10, 36, 30, 42, 19, 19, 34, 23, 46, 5, 47, 29, 36, 21, 27, 13, 4, 26, 48, 8, 37, 19, 47, 41, 34, 43, 28, 39, 31, 45, 23, 48, 9, 12, 18, 33, 36, 39, 36, 8, 43, 2, 47, 48, 7, 32, 24, 47, 11, 1, 45, 12, 2, 24, 18, 28, 46, 26, 21, 11, 41, 44, 9, 24, 15, 29, 19, 46, 30, 16, 34, 34, 17, 5, 24, 31, 35, 30, 36, 2, 21, 40, 6, 38, 37, 42, 5, 1, 14, 22, 2, 45, 49, 33, 38, 27, 28, 47, 28, 47, 14, 3, 35, 5, 47, 44, 24, 11, 13, 23, 26, 23, 7, 33, 7, 25, 34, 38, 39, 9, 31, 49, 12, 11, 26, 41, 25, 31, 37, 45, 10, 33, 18, 49, 40, 1, 28, 25, 18, 48, 22, 40, 43, 14, 41, 14, 28, 42, 44, 21, 30, 11, 30, 39, 4, 7, 7, 32, 9, 16, 18, 13, 41, 41, 23, 3, 14, 31, 22, 48, 9, 46, 14, 39, 8, 5, 31, 43, 18, 42, 39, 23, 20, 43, 34, 31, 9, 15, 24, 40, 3]
    data['weights'] = weights
    data['items'] = list(range(len(weights)))
    data['bins'] = data['items']
    data['bin_capacity'] = 100
    return data



def main():
    data = create_data_model()

    # Create the mip solver with the SCIP backend.
    solver = pywraplp.Solver.CreateSolver('SCIP')


    # Variables
    # x[i, j] = 1 if item i is packed in bin j.
    x = {}
    for i in data['items']:
        for j in data['bins']:
            x[(i, j)] = solver.IntVar(0, 1, 'x_%i_%i' % (i, j))

    # y[j] = 1 if bin j is used.
    y = {}
    for j in data['bins']:
        y[j] = solver.IntVar(0, 1, 'y[%i]' % j)

    # Constraints
    # Each item must be in exactly one bin.
    for i in data['items']:
        solver.Add(sum(x[i, j] for j in data['bins']) == 1)

    # The amount packed in each bin cannot exceed its capacity.
    for j in data['bins']:
        solver.Add(
            sum(x[(i, j)] * data['weights'][i] for i in data['items']) <= y[j] *
            data['bin_capacity'])

    # Objective: minimize the number of bins used.
    solver.Minimize(solver.Sum([y[j] for j in data['bins']]))

    status = solver.Solve()
    percent = 0
    if status == pywraplp.Solver.OPTIMAL:
        num_bins = 0.
        for j in data['bins']:
            if y[j].solution_value() == 1:
                bin_items = []
                bin_weight = 0
                for i in data['items']:
                    if x[i, j].solution_value() > 0:
                        bin_items.append(i)
                        bin_weight += data['weights'][i]
                if bin_weight > 0:
                    num_bins += 1
                    print('Bin number', j)
                    print('  Items packed:', bin_items)
                    print('  Total weight:', bin_weight)
                    percent = percent + bin_weight
                    print()
        print()
        print('Number of bins used:', num_bins)
        print('Time = ', solver.WallTime(), ' milliseconds')
        print('Total efficiency:', percent/num_bins*100)
    else:
        print('The problem does not have an optimal solution.')


if __name__ == '__main__':
    main()